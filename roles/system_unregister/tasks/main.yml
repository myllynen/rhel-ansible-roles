---
- name: Gather package facts
  ansible.builtin.package_facts:

- name: Disable rhcd service
  ansible.builtin.service:
    name: rhcd
    enabled: false
  when: "'rhc' in ansible_facts.packages"

- name: Stop rhcd service
  ansible.builtin.service:
    name: rhcd
    state: stopped
  when: "'rhc' in ansible_facts.packages"

- name: Unregister system from Red Hat Insights
  ansible.builtin.command:
    cmd: insights-client --unregister
    removes: /etc/insights-client/.registered
  when: "'insights-client' in ansible_facts.packages"

- name: Unregister from Red Hat Subscription Management
  ansible.builtin.command: subscription-manager unregister
  register: unregister
  failed_when: unregister.rc != 0 and 'currently not registered' not in unregister.stderr
  changed_when: unregister.rc == 0 and 'has been unregistered' in unregister.stdout
  ignore_errors: true

- name: Remove all Subscription Management local data
  ansible.builtin.command: subscription-manager clean
  changed_when: unregister is failed

- name: Remove Katello CA package
  ansible.builtin.dnf:
    name: katello-ca-consumer-*
    state: absent
    cacheonly: true
    disable_plugin:
      - product-id
      - subscription-manager
    disablerepo: '*'

- name: Remove Katello CA certificates
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/rhsm/ca/katello-default-ca.pem
    - /etc/rhsm/ca/katello-server-ca.pem

- name: Locate RHSM cache files
  ansible.builtin.find:
    paths: /var/lib/rhsm
    file_type: file
    recurse: true
    excludes:
      - redhat.repo
      - syspurpose.json
  register: rhsm_cache

- name: Remove RHSM cache files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop: "{{ rhsm_cache.files | map(attribute='path') }}"

- name: Clean package manager caches
  ansible.builtin.command: dnf -C --disableplugin=product-id,subscription-manager clean all
  register: pkg_cache
  changed_when: not pkg_cache.stdout.startswith('0 files removed')

- name: Check RHSM configuration backup files
  ansible.builtin.find:
    paths: /etc/rhsm
    patterns: 'rhsm.conf.*'
  register: rhsm_backups

- name: Restore RHSM configuration backup files
  ansible.builtin.copy:
    src: "{{ item.path }}"
    dest: /etc/rhsm/rhsm.conf
    mode: '0644'
    remote_src: true
  loop: "{{ rhsm_backups.files | sort(attribute='path') }}"
  loop_control:
    label: "{{ item.path }}"
  when: item.path | basename in ['rhsm.conf.bak', 'rhsm.conf.kat-backup', 'rhsm.conf.rpmnew']

- name: Remove RHSM configuration backup files
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ rhsm_backups.files | sort(attribute='path') }}"
  loop_control:
    label: "{{ item.path }}"
  when: item.path | basename in ['rhsm.conf.bak', 'rhsm.conf.kat-backup', 'rhsm.conf.rpmnew']
