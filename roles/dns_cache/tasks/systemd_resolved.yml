---
- name: Gather needed facts
  ansible.builtin.setup:
    gather_subset:
      - '!all'
      - '!min'
      - distribution_major_version
  when: ansible_facts.distribution_major_version is not defined

- name: Install systemd-resolved package
  ansible.builtin.dnf:
    name: systemd-resolved
    state: present
  when: ansible_facts.distribution_major_version | int != 8

- name: Gather service facts
  ansible.builtin.service_facts:

- name: Update systemd-resolved DNSSEC configuration (RHEL 8)
  ansible.builtin.lineinfile:
    path: /etc/systemd/resolved.conf
    regexp: '^(#|)DNSSEC=.*'
    line: 'DNSSEC=no'
  register: daemon_config
  when: ansible_facts.distribution_major_version | int == 8

- name: Enable systemd-resolved service
  ansible.builtin.service:
    name: systemd-resolved
    enabled: true
  when: "'systemd-resolved.service' in ansible_facts.services"

- name: Start systemd-resolved service
  ansible.builtin.service:
    name: systemd-resolved
    state: started
  register: service_start
  when: "'systemd-resolved.service' in ansible_facts.services"

- name: Restart systemd-resolved to apply configuration changes
  ansible.builtin.service:
    name: systemd-resolved
    state: restarted
  when:
    - "'systemd-resolved.service' in ansible_facts.services"
    - service_start is not changed
    - daemon_config is changed

- name: Update NetworkManager DNS cache configuration
  ansible.builtin.copy:
    content: |
      [main]
      dns=systemd-resolved
      rc-manager=symlink
    dest: /etc/NetworkManager/conf.d/95-dns-cache.conf
    mode: '0644'
  register: nm_config

- name: Reload NetworkManager to apply configuration changes
  ansible.builtin.service:
    name: NetworkManager
    state: reloaded
  when: nm_config is changed
